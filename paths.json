// This file itself must be on the CODE_PATH
{
    "paths": {
        // Paths set from config.cfg
        "ROOT_PATH":                    "",
        "CODE_PATH":                    "",

        // Paths on ROOT_PATH
        // model-dev case 
        "ENCODINGS_PATH":               "data/annotated/voice_separation/encodings/", // (Dataset)
        "MIDI_PATH":                    "data/annotated/voice_separation/MIDI/", // (Dataset)
        "ENCODINGS_PATH_JOSQUINTAB":    "data/annotated/tabmapper/josquin-int/in/tab/", // (tests only)
        "MIDI_PATH_JOSQUINTAB":         "data/annotated/tabmapper/josquin-int/in/MIDI/", // (tests only)
        "DATASETS_PATH":                "datasets/", // (Runner)
        "EXPERIMENTS_PATH":             "experiments/", // (UI)
        // model-dev and toolbox case
        "MODELS_PATH":                  "models/", // (UI), (UI)
        "TEMPLATES_PATH":               "templates/", // (UI), (Editor, TabMapper, UI)  
        // toolbox case
        "ANALYSER_PATH":                "data/analyser/", // (Analyser)
        "CONVERTER_PATH":               "data/converter/", // (Editor)
        "TABMAPPER_PATH":               "data/tabmapper/", // (TabMapper)
        "DIPLOMAT_PATH":                "data/transcriber/diplomatic/", // (transcriber.py)
        "POLYPHONIST_PATH":             "data/transcriber/polyphonic/", // (Analyser, Dataset, UI)
        
        // Paths on CODE_PATH
        // model-dev and toolbox case
        "UTILS_PYTHON_PATH":            "utils/py/", // (UI), (TabMapper, UI) 
        "VOICE_SEP_PYTHON_PATH":        "voice_separation/py/", // (TrainingManager, TestManager), (TestManager)
        "VOICE_SEP_MATLAB_PATH":        "voice_separation/m/", // (TestManager), (TestManager)
        // toolbox case
        "ANALYSIS_PYTHON_PATH":         "analysis/py/" // (Analyser)
    },
    "files": {
        "BEAM_SCRIPT":                  "beam.py",
        "SCIKIT_SCRIPT":                "model_scikit.py",
        "TENSORFLOW_SCRIPT":            "model_tensorflow.py",
        "MEI_TEMPLATE":                 "template-MEI.mei",
        "MODEL_PARAMETERS":             "params.json"
    }
}